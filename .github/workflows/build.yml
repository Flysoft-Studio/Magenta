name: Build

on:
    push:
        branches: ["main"]
    pull_request:
        branches: ["main"]

env:
    CARGO_TERM_COLOR: always

jobs:
    build:
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
        runs-on: ${{ matrix.os }}
        steps:
            - uses: actions/checkout@v3

            - name: Use Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18.x

            - name: Use Yarn
              run: npm install yarn -g

            - name: Get Yarn cache directory path
              if: runner.os == 'Windows'
              run: echo "yarn_cache_dir=$(yarn cache dir)" >> $env:GITHUB_ENV

            - name: Get Yarn cache directory path
              if: runner.os != 'Windows'
              run: echo "yarn_cache_dir=$(yarn cache dir)" >> $GITHUB_ENV

            - name: Cache Yarn dependencies
              id: yarn-cache
              uses: actions/cache@v3
              with:
                  path: ${{ env.yarn_cache_dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Cache Cargo dependencies
              id: cargo-cache
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                      src-tauri/target/
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

            - name: Run install
              run: yarn install --prefer-offline

            - name: Build production
              run: yarn run tauri:build:is

            - name: Upload dist
              if: runner.os == 'Windows'
              uses: actions/upload-artifact@v3
              with:
                  name: win32
                  path: "out/*"

            - name: Upload dist
              if: runner.os == 'Linux'
              uses: actions/upload-artifact@v3
              with:
                  name: linux
                  path: "out/*"

            - name: Upload dist
              if: runner.os == 'macOS'
              uses: actions/upload-artifact@v3
              with:
                  name: macos
                  path: "out/*"
